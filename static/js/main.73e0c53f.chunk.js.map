{"version":3,"sources":["components/Header.js","components/Home.js","components/Navbar.js","components/Editor.js","components/WriteScreen.js","components/About.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","className","id","src","alt","Home","to","Component","Navbar","Editor","state","letters","editor","onAlphaNumeric","bind","onAnyKey","save","this","setState","ClassicEditor","create","document","querySelector","onKeyDown","onKeyPress","type","onClick","evt","push","key","then","setData","length","pop","catch","console","log","contentDiv","createElement","innerText","join","getElementById","appendChild","About","App","exact","path","component","WriteScreen","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"kSAEe,SAASA,IACtB,OACE,yBAAKC,UAAU,UACb,yBAAKC,GAAG,SACN,oCAAS,0BAAMA,GAAG,gBAAT,WACT,4CAEF,yBAAKA,GAAG,QACJ,yBAAKA,GAAG,YAAYC,IAAI,kBAAkBC,IAAI,a,ICNnCC,E,uKAEjB,OACE,yBAAKJ,UAAU,WACb,kBAACD,EAAD,MACA,uDACA,uDACA,2CAAgB,0BAAME,GAAG,cAAT,YAAhB,aACA,kBAAC,IAAD,CAAMI,GAAG,UACP,4BAAQL,UAAU,eAAlB,2B,GATwBM,aCYnBC,E,uKAXX,OACE,yBAAKP,UAAU,aAAaC,GAAG,UAC7B,4BACE,wBAAID,UAAU,YAAW,kBAAC,IAAD,CAAMK,GAAG,UAAT,UACzB,wBAAIL,UAAU,YAAW,kBAAC,IAAD,CAAMK,GAAG,UAAT,gB,GANdC,a,yBCAAE,E,kDACnB,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,QAAS,GACTC,OAAQ,IAGV,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKE,KAAO,EAAKA,KAAKF,KAAV,gBAVA,E,gEAcZG,KAAKC,SAAS,CAAEN,OAAQO,IAAcC,OAAOC,SAASC,cAAc,gB,+BAIpE,OACE,yBAAKrB,UAAU,kBACb,yBAAKC,GAAG,MACNqB,UAAWN,KAAKF,SAChBS,WAAYP,KAAKJ,gBACjB,2BAAOY,KAAK,OAAOvB,GAAG,YAExB,yBAAKD,UAAU,WACb,4BACEA,UAAU,gBACVC,GAAG,OACHwB,QAAST,KAAKD,MAHhB,WAKF,yBAAKd,GAAG,qB,qCAKCyB,GACbV,KAAKP,MAAMC,QAAQiB,KAAKD,EAAIE,O,+BAGrBF,GAAM,IAAD,OACNf,EAASK,KAAKP,MAAME,OACpBD,EAAUM,KAAKP,MAAMC,QACrBkB,EAAMF,EAAIE,IAChBjB,EAAOkB,MAAK,SAAClB,GACC,MAARiB,GACFjB,EAAOmB,QAAQ,WAGL,cAARF,GAAuD,MAAhClB,EAAQA,EAAQqB,OAAS,IAClDrB,EAAQsB,MAEE,UAARJ,IACFjB,EAAOmB,QAAQ,WACfpB,EAAQiB,KAAK,MACb,EAAKZ,WAGRkB,MAAMC,QAAQC,O,6BAGT,IAAD,OACCxB,EAASK,KAAKP,MAAME,OACtBD,EAAUM,KAAKP,MAAMC,QACzBC,EAAOkB,MAAK,SAAClB,GACXA,EAAOmB,QAAQ,WACf,IAAMM,EAAahB,SAASiB,cAAc,OAC1CD,EAAWnC,GAAK,UAChBmC,EAAWE,UAAY5B,EAAQ6B,KAAK,IACfnB,SAASoB,eAAe,iBAChCC,YAAYL,GACzB,EAAKnB,SAAS,CAACP,QAAS,QAEzBuB,MAAMC,QAAQC,S,GA1EiB7B,aCErB,aACb,OACE,6BACE,kBAAC,EAAD,MACA,kBAACP,EAAD,MACA,kBAAC,EAAD,QCPS,SAAS2C,IACtB,OACE,6BACE,kBAAC,EAAD,MACA,yBAAK1C,UAAU,SACb,gEAEE,6BAFF,2UAMA,+K,ICQO2C,E,uKAZX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1C,IACjC,kBAAC,IAAD,CAAOyC,KAAK,SAASC,UAAWC,IAChC,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAWJ,U,GAPxBpC,aCEZ0C,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT1B,MAAK,SAAA8B,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpD,QACf+C,UAAUC,cAAcO,WAK1B9B,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBF,OAAM,SAAAgC,GACL/B,QAAQ+B,MAAM,4CAA6CA,MChEjEC,IAASC,OAAO,kBAAC,EAAD,MAAS/C,SAASoB,eAAe,SDclC,WACb,GAA6C,kBAAmBgB,UAAW,CAGzE,GADkB,IAAIY,IAAIC,eAAwBnB,OAAOC,UAC3CmB,SAAWpB,OAAOC,SAASmB,OAIvC,OAGFpB,OAAOqB,iBAAiB,QAAQ,WAC9B,IAAMhB,EAAK,UAAMc,eAAN,sBAENrB,EAwCX,SAAiCO,GAE/BiB,MAAMjB,GACH1B,MAAK,SAAA4C,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CrB,UAAUC,cAAcqB,MAAMjD,MAAK,SAAA8B,GACjCA,EAAaoB,aAAalD,MAAK,WAC7BqB,OAAOC,SAAS6B,eAKpB1B,EAAgBC,MAGnBtB,OAAM,WACLC,QAAQC,IACN,oEAzDA8C,CAAwB1B,GAHxBD,EAAgBC,OC7BxB2B,K","file":"static/js/main.73e0c53f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Header () {\r\n  return(\r\n    <div className=\"header\">\r\n      <div id=\"title\">\r\n        <h1>Text <span id=\"title-vanish\">Vanish</span></h1>\r\n        <h5>for writers</h5>\r\n      </div>\r\n      <div id=\"logo\">\r\n          <img id=\"img-smoke\" src=\"./text-vnsh.png\" alt='vanish' />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from './Header';\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return(\r\n      <div className=\"welcome\">\r\n        <Header />\r\n        <h1> Get your thoughts out </h1>\r\n        <h2>One. Word. At. A. Time.</h2>\r\n        <h2> Forget the <span id=\"strike-out\">mitsakes</span> mistakes</h2>\r\n        <Link to=\"/write\">\r\n          <button className=\"btn-warning\">Start writing now</button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar-nav\" id=\"navbar\"> \r\n        <ul>  \r\n          <li className=\"link-nav\"><Link to=\"/write\">Write</Link></li>\r\n          <li className=\"link-nav\"><Link to=\"/about\">About</Link></li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic/build/ckeditor';\r\n\r\nexport default class Editor extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      letters: [],\r\n      editor: {}\r\n    };\r\n\r\n    this.onAlphaNumeric = this.onAlphaNumeric.bind(this);\r\n    this.onAnyKey = this.onAnyKey.bind(this);\r\n    this.save = this.save.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ editor: ClassicEditor.create(document.querySelector('#editor')) })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"app-containter\">\r\n        <div id=\"app\" \r\n          onKeyDown={this.onAnyKey}\r\n          onKeyPress={this.onAlphaNumeric}>\r\n          <input type=\"text\" id=\"editor\"></input>\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <button \r\n            className=\"btn btn-block\"\r\n            id=\"save\"\r\n            onClick={this.save}>REVEAL</button>\r\n        </div>\r\n        <div id=\"typed-content\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onAlphaNumeric(evt) {\r\n    this.state.letters.push(evt.key);\r\n  }\r\n\r\n  onAnyKey(evt) {\r\n    const editor = this.state.editor;\r\n    const letters = this.state.letters;\r\n    const key = evt.key;\r\n    editor.then((editor) => {\r\n      if (key === ' ') {\r\n        editor.setData('<p></p>');\r\n      }\r\n      // Only allow backspace when text is visible in editor\r\n      if (key === 'Backspace' && letters[letters.length - 1] !== ' ') {\r\n        letters.pop();\r\n      }\r\n      if (key === 'Enter') {\r\n        editor.setData('<p></p>');\r\n        letters.push('\\n');\r\n        this.save(); // ALTERNATE FEATURE: display text so far when enter is pressed instead of only when save button is clicked\r\n      }\r\n    })\r\n    .catch(console.log);\r\n  }\r\n\r\n  save() {\r\n    const editor = this.state.editor;\r\n    let letters = this.state.letters;\r\n    editor.then((editor) => {\r\n      editor.setData('<p></p>');\r\n      const contentDiv = document.createElement('div');\r\n      contentDiv.id = 'content';\r\n      contentDiv.innerText = letters.join('');\r\n      const typedContent = document.getElementById('typed-content');\r\n      typedContent.appendChild(contentDiv);\r\n      this.setState({letters: []})\r\n    })\r\n    .catch(console.log);\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Navbar from './Navbar';\r\nimport Header from './Header';\r\nimport Editor from './Editor';\r\n\r\nexport default function () {\r\n  return(\r\n    <div>\r\n      <Navbar />\r\n      <Header />\r\n      <Editor/>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Navbar from './Navbar';\r\n\r\nexport default function About() {\r\n  return(\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"about\">\r\n        <p>\r\n          The reason for this app is simple. \r\n          <br />\r\n          Your workflow: You write some words, make some typos, and type some more letters before realizing an error... Now you're mashing the left arrow key or worse - backspace - to correct the mistake. Now you're heading back to the end of your sentence, or retyping the whole thing ... aaaaannd ... you've lost your train of thought. \r\n        </p>\r\n\r\n        <p> Text Vanish was made to allow you to keep typing, without the ability to fix or even see the errors, so you don't miss your train of thought.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\r\nimport './app.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Home from './components/Home';\r\nimport WriteScreen from './components/WriteScreen';\r\nimport About from './components/About';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/write\" component={WriteScreen} />\r\n          <Route path=\"/about\" component={About} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}